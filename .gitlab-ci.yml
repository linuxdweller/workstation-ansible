stages:
  - provision

variables:
  STATE: ''
  TF_ROOT: ${CI_PROJECT_DIR}/terraform
  ANSIBLE_ROOT: ${CI_PROJECT_DIR}/playbook
  ANSIBLE_HOST_KEY_CHECKING: 'False'
  PROXMOX_URL: https://192.168.0.105:8006/api2/json

cache:
  key: example-production
  paths:
    - ${TF_ROOT}/.terraform

# Uses PM_API_TOKEN_ID, PM_API_TOKEN_SECRET variables for Proxmox authentication.
# Uses PROVISIONING_SSH_PRIVATE_KEY containing private key for SSH authentication.
deploy:
  rules:
    - if: $CI_PIPELINE_TRIGGERED && $STATE == 'present'
  stage: provision
  image: docker.houseofkummer.com/homelab/dockops:0.5.1
  variables:
    TF_HTTP_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${MACHINE_ID}
    TF_HTTP_LOCK_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${MACHINE_ID}/lock
    TF_HTTP_LOCK_METHOD: POST
    TF_HTTP_UNLOCK_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${MACHINE_ID}/lock
    TF_HTTP_UNLOCK_METHOD: DELETE
    TF_HTTP_USERNAME: gitlab-ci-token
    TF_HTTP_PASSWORD: ${CI_JOB_TOKEN}
    TF_HTTP_RETRY_WAIT_MIN: 5
  script:
    - cd ${TF_ROOT}
    - terraform init -input=false
    - terraform apply -auto-approve -input=false
    - chmod 600 ${PROVISIONING_SSH_PRIVATE_KEY}
    - apt install jq --yes
    - terraform show -json | jq '.values.outputs' > outputs.json
    - cd ${ANSIBLE_ROOT}
    - pip install poetry==1.3.2
    - poetry install --no-root --all-extras
    - poetry run ansible-galaxy install -r requirements.yaml
    - poetry run ansible-playbook --key-file ${PROVISIONING_SSH_PRIVATE_KEY} --inventory inventory main.yaml
  artifacts:
    when: always
    paths:
      - terraform/outputs.json
    expire_in: '30 days'

destroy:
  rules:
    - if: $CI_PIPELINE_TRIGGERED && $STATE == 'absent'
  stage: provision
  image: docker.houseofkummer.com/homelab/dockops:0.5.1
  variables:
    TF_HTTP_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${MACHINE_ID}
    TF_HTTP_LOCK_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${MACHINE_ID}/lock
    TF_HTTP_LOCK_METHOD: POST
    TF_HTTP_UNLOCK_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${MACHINE_ID}/lock
    TF_HTTP_UNLOCK_METHOD: DELETE
    TF_HTTP_USERNAME: gitlab-ci-token
    TF_HTTP_PASSWORD: ${CI_JOB_TOKEN}
    TF_HTTP_RETRY_WAIT_MIN: 5
  script:
    - cd ${TF_ROOT}
    - terraform init -input=false
    - terraform destroy -auto-approve -input=false 
