---
- name: Get NeoVim version
  ansible.builtin.command: nvim --version
  ignore_errors: true
  changed_when: false
  register: neovim_version_check

- name: Install FUSE appimage dependency
  become: true
  ansible.builtin.apt:
    name:
      - libfuse2
      - fuse3
    state: latest

- name: Set is_neovim_present fact
  ansible.builtin.set_fact:
    is_neovim_present: "{{ not neovim_version_check.failed and neovim_version_check.stdout | regex_search(neovim_version | regex_escape()) }}"

- name: Download NeoVim appimage
  ansible.builtin.get_url:
    url: https://github.com/neovim/neovim/releases/download/{{ neovim_version }}/nvim.appimage
    dest: /tmp/neovim.appimage
    mode: "755"
  when: not is_neovim_present

- name: Install NeoVim appimage by copying it
  become: true
  ansible.builtin.copy:
    src: /tmp/neovim.appimage
    remote_src: true
    dest: /usr/local/bin/nvim
    mode: "0755"
  when: not is_neovim_present

- name: Lazy.nvim repository is cloned
  ansible.builtin.git:
    repo: https://github.com/folke/lazy.nvim.git
    dest: ~/.local/share/nvim/lazy/lazy.nvim
    version: stable
    force: true

- name: NeoVim config directory is present
  ansible.builtin.file:
    path: ~/.config/nvim
    state: directory
    mode: "1744"

- name: Lazy.nvim lockfile is present
  ansible.builtin.copy:
    src: lazy-lock.json
    dest: ~/.config/nvim/lazy-lock.json
    mode: "0644"

- name: NeoVim config is present
  ansible.builtin.copy:
    src: init.lua
    dest: ~/.config/nvim/init.lua
    mode: "0644"

- name: Lua folder is present
  ansible.builtin.file:
    path: ~/.config/nvim/lua
    state: directory
    mode: "1755"

- name: Plugins.lua is present
  ansible.builtin.copy:
    src: plugins.lua
    dest: ~/.config/nvim/lua/plugins.lua
    mode: "0644"

- name: Node is present for installing language servers with npm
  become: true
  ansible.builtin.apt:
    name:
      - nodejs
      - npm
    state: latest

# TODO Add typescript compiler
- name: TypeScript language server is installed
  become: true
  community.general.npm:
    name: typescript-language-server
    global: true
    state: latest

- name: Astro language server is installed
  become: true
  community.general.npm:
    name: "@astrojs/language-server"
    global: true
    state: latest

- name: YAML language server is installed
  become: true
  community.general.npm:
    name: yaml-language-server
    global: true
    state: latest

- name: Dockerfile language server is installed
  become: true
  community.general.npm:
    name: dockerfile-language-server-nodejs
    global: true
    state: latest

- name: Emmet abbreviation language server is installed
  become: true
  community.general.npm:
    name: emmet-ls
    global: true
    state: latest

- name: Tailwind language server is installed
  become: true
  community.general.npm:
    name: "@tailwindcss/language-server"
    global: true
    state: latest

- name: Ansible language server is installed
  become: true
  community.general.npm:
    name: "@ansible/ansible-language-server"
    global: true
    state: latest

- name: Pyright is installed
  community.general.pipx:
    name: pyright
    state: latest

- name: Mypy is installed
  community.general.pipx:
    name: mypy
    state: latest

- name: Pylint is installed
  community.general.pipx:
    name: pylint
    state: latest

- name: Black is installed
  community.general.pipx:
    name: black
    state: latest

- name: Search tools are installed
  become: true
  ansible.builtin.apt:
    name:
      - ripgrep
      - fd-find
    state: latest

- name: Clang and Clangd language server are installed
  become: true
  ansible.builtin.apt:
    name:
      - clang
      - clangd
      - bear
    state: latest

- name: Get latest Helm language server release
  ansible.builtin.set_fact:
    helm_ls_latest_release: "{{ lookup('ansible.builtin.url', 'https://api.github.com/repos/mrjosh/helm-ls/releases/latest', split_lines=False) }}"

- name: Helm language server version facts are set
  ansible.builtin.set_fact:
    helm_ls_checksum_url: https://github.com/mrjosh/helm-ls/releases/download/{{ helm_ls_latest_release.name }}/helm_ls_linux_amd64.sha256sum
    helm_ls_url: https://github.com/mrjosh/helm-ls/releases/download/{{ helm_ls_latest_release.name }}/helm_ls_linux_amd64

- name: Helm language server is installed
  become: true
  ansible.builtin.get_url:
    url: "{{ helm_ls_url }}"
    checksum: "sha256:{{ (lookup('ansible.builtin.url', helm_ls_checksum_url) | split(' '))[0] }}"
    dest: /usr/local/bin/helm_ls
    mode: "755"
